{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates an API Gateway with CloudFront that acts as a simple Ad Decision Server. Returns a different VAST XML response depending on User-Agent header.",
    "Resources": {
        "AdServer": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": { "Fn::Join": ["\n", [
                        "import json",
                        "import urllib2",
                        "def handler(event, context):",
                        "   userAgent = event['headers']['User-Agent']",
                        "   print('user agent: ' + userAgent)",
                        "   if \"Linux\" in userAgent:",
                        "       response = urllib2.urlopen('http://d2qohgpffhaffh.cloudfront.net/MediaTailor/VASTDemo1.xml')",
                        "   elif \"Mac OS\" in userAgent:",
                        "       response = urllib2.urlopen('http://d2qohgpffhaffh.cloudfront.net/MediaTailor/VASTDemo2.xml')",
                        "   else:",
                        "       response = urllib2.urlopen('http://d2qohgpffhaffh.cloudfront.net/MediaTailor/VASTDemo3.xml')",
                        "   content = response.read()",
                        "   return {",
                        "       'statusCode': 200,",
                        "       'headers': { 'Content-Type': 'application/xml' },",
                        "       'body': content",
                        "   }"
                    ]
                   ]}        
                },
                "Environment": {},
                "Handler": "index.handler",
                "MemorySize": 3008,
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 300
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "ADSGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Mock ADS API",
                "Description": "API used for making ADS request",
                "FailOnWarnings": true
            }
        },
        "LambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "AdServer",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ADSGateway"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ADSGatewayResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ADSGateway"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ADSGateway",
                        "RootResourceId"
                    ]
                },
                "PathPart": "MyADS"
            }
        },
        "ADSGatewayMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ResourceId": {
                    "Ref": "ADSGatewayResource"
                },
                "RestApiId": {
                    "Ref": "ADSGateway"
                },
                "HttpMethod": "GET",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AdServer.Arn}/invocations"
                    }
                }
            },
            "DependsOn": [
                "LambdaPermission"
            ]
        },
        "ApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ADSGateway"
                },
                "StageName": "DeployStage"
            },
            "DependsOn": [
                "ADSGatewayMethod"
            ]
        },
        "APIGatewayAcct": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {
                    "Fn::GetAtt": [
                        "APIGatewayCloudWatchLogsRole",
                        "Arn"
                    ]
                }
            }
        },
        "APIGatewayCloudWatchLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ApiGatewayLogsPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents",
                                        "logs:GetLogEvents",
                                        "logs:FilterLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ADSAPIStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ApiDeployment"
                },
                "MethodSettings": [
                    {
                        "DataTraceEnabled": true,
                        "HttpMethod": "*",
                        "LoggingLevel": "INFO",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "ADSGateway"
                },
                "StageName": "Dev"
            },
            "DependsOn": [
                "APIGatewayAcct"
            ]
        },
        "CloudFront": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Comment": "Mock ADS",
                    "Origins": [
                        {
                            "Id": "API-GW",
                            "DomainName": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                        "Ref": "ADSGateway"
                                        },
                                        ".execute-api.",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ".amazonaws.com"
                                    ]
                                ]
                        },
                            "CustomOriginConfig": {
                                "OriginProtocolPolicy": "https-only"
                            }
                        }
                    ],
                    "Enabled": "true",
                    "DefaultCacheBehavior": {
                        "TargetOriginId": "API-GW",
                        "ForwardedValues": {
                            "QueryString": "false",
                            "Cookies": {
                                "Forward": "none"
                            }
                        },
                        "ViewerProtocolPolicy": "allow-all"
                    }
                }
            }
        }
    },
    "Parameters": {},
    "Outputs": {
        "AdDecisionServerURL": {
            "Value": {
                "Fn::Join": [
                    "/",
                    [
                        {"Fn::Sub": "https://${CloudFront.DomainName}"},
                        {
                            "Ref": "ADSAPIStage"
                        },
                        "MyADS"
                    ]
                ]
            },
            "Description": "Ad Decision Server URL (API Gateway with CloudFront)"
        }
    }
}
